@using MassScheduler.Models
@model Meeting

@{
    ViewBag.Title = "Details";
    var user = ViewBag.CurrentUser as UserInformation;
}

<div class="page events">
    <span class="heading">
        @Html.ActionLink("Events", "index", "meetings")
    </span>
    <header>
        @if (user.Username == Model.Creator)
        {
            <nav class="page-actions">
                <ul class="action-bar">
                    <li>@Html.ActionLink("Edit this Event", "edit", new { id = Model.Id }, new { title = "Edit this Event" })</li>
                    <li>@Html.ActionLink("Delete Event", "delete", new { id = Model.Id }, new { title = "Delete this Event" })</li>
                </ul>
            </nav>
        }
        <h1>@Model.Title</h1>
    </header>
    <article class="event @(Model.IsUserAttending(user.Username) ? "attending" : "" )" id="event-@Model.Id" data-eventid="@Model.Id">
        <div class="group">
            <aside class="meeting-meta secondary med">
                <dl>
                    <dt>When:</dt> 
                    <dd>@Model.LocalStartDate.ToShortTimeString() - @Model.LocalEndDate.ToShortTimeString()</dd>

                    <dt>Where:</dt> 
                    <dd>@Model.Location</dd>
                    <dd class="note">(NOTE: Dallas office to attend ALL presentations in the ARENA)</dd>
                    
                    @if (Model.Speakers.Any())
                    {
                        <dt>Speaker(s): </dt>
                        <dd>
                            @Html.DisplayFor(s => Model.Speakers, "MeetingSpeakers")
                        </dd>
                    }
                    
                    <dt>AIA Credit:</dt>
                    <dd>@(Model.AIACredits ? "Yes" : "No")</dd>
                    
                    <dt>GBCI Credit:</dt>
                    <dd>@Model.GBCICredit</dd>
                </dl>
                
            </aside>
            <article class="focus med">
                <time>@Model.StartDate.ToLongDateString() @@ @Model.LocalStartDate.ToShortTimeString()</time>
                @Html.Markdown(Model.Descritpion)
                
                <p>
                    <strong>Lync Meeting Url:</strong>
                    <a href="@Model.MeetingUrl">@Model.MeetingUrl</a>
                </p>
                
                @if (!String.IsNullOrEmpty(Model.Sponsor))
                {
                    <p><strong>Sponsored by <em>@Model.Sponsor</em></strong></p>
                }
                
                <ul class='action-bar'>
                    @if (!Model.HasEnded()) 
                    {
                        <li>@Html.ActionLink("RSVP to this Event", "register", "rsvp", new { id = Model.Id }, new { @class = "rsvp-button button positive", title = "RSVP to this Event" })</li>
                        <li>@Html.ActionLink("Cancel my RSVP", "cancel", "rsvp", new { id = Model.Id }, new { @class = "cancel-rsvp-button button destructive", title = "Cancel my RSVP" })</li>
                        <li>@Html.ActionLink("Add to my Calendar", "ical", "services", new { id = Model.Id }, new { @class = "download-button button", title = "Add to Calendar" })</li>
                    }
                </ul>
            </article>
        </div>

        <hr/> 

        <div id="attendees">
            @Html.DisplayFor(x => x.RSVP, "EventRsvpList")
        </div>
    </article>

</div>
@section scripts
{
    <script>
        var baseUrl = "@Url.RouteUrl(new { action = "getattendees", controller = "meetings" })";
    </script>
    @Scripts.Render("~/scripts/site")
}